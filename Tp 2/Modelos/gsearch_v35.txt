Begin
CV Results:
{'mean_fit_time': array([ 44.33252044,  59.81115813, 122.70187464, 209.16227908,
       228.52654409, 100.24300003, 143.76790261, 158.54432259,
       222.24173722, 205.07897692,  80.25971155, 157.5580792 ,
       129.02189612, 132.88932681, 238.98509922,  98.94662733,
        24.86979933, 120.52945819, 189.72532811, 188.04813271,
       118.5906167 , 123.81074295,  69.36813612, 179.45565028,
       274.889539  , 111.69252253, 125.35993686, 118.02542977,
       159.70966997, 185.79210052,  63.97979951,  25.95461025,
       129.30838342, 187.38533535, 203.56517558,  80.00641112,
       134.11016927, 139.69098787, 165.29275656, 165.04365263,
       107.536514  ,  65.75017037, 177.0015048 ,  95.87260413,
       140.13221364]), 'std_fit_time': array([ 5.93860617, 11.33036139, 25.53971238, 70.07742878, 59.87457485,
       31.88295693, 35.49181694, 43.40583523, 37.27792578, 61.37648957,
       43.69040936,  9.97486604, 76.54257583, 40.74705391, 63.43470267,
       35.6245437 ,  7.95770374, 53.35102271, 61.35488185, 83.13007271,
        7.63186511, 37.57921549, 11.16058937, 95.25570223, 30.22289651,
       12.34490092, 33.20305096, 52.41948888, 35.82645215, 59.96291998,
       25.63799813, 10.03695405, 69.91483459, 87.21330954, 63.21413   ,
       26.01897367, 28.78927007, 49.75815136, 60.19213896, 85.38474008,
        9.55934508, 33.46598882, 22.83182667, 65.50944388, 74.54848227]), 'mean_score_time': array([0.06365418, 0.0329011 , 0.05083776, 0.06967874, 0.06701474,
       0.05840921, 0.07356424, 0.07177954, 0.06150837, 0.06960974,
       0.03842301, 0.09225621, 0.04606528, 0.05038748, 0.08392353,
       0.06511507, 0.01977329, 0.05490761, 0.05823979, 0.0646276 ,
       0.08066735, 0.06329246, 0.04623823, 0.06024132, 0.07926712,
       0.06929135, 0.06077828, 0.03446541, 0.0625474 , 0.04970717,
       0.05554018, 0.03160329, 0.06344442, 0.06800432, 0.04671445,
       0.04465823, 0.06086736, 0.04270582, 0.04984741, 0.05316319,
       0.07204509, 0.05683279, 0.06113343, 0.05610652, 0.05367246]), 'std_score_time': array([0.02986701, 0.01890399, 0.02962066, 0.02535901, 0.03016041,
       0.01841736, 0.01033668, 0.03422001, 0.01944218, 0.03168902,
       0.03623202, 0.02167485, 0.03149019, 0.02465004, 0.01978411,
       0.02138701, 0.01764059, 0.035762  , 0.02993877, 0.02821678,
       0.0078912 , 0.02836332, 0.04690564, 0.0259983 , 0.00861221,
       0.02654811, 0.02778952, 0.0204036 , 0.02754542, 0.02752753,
       0.03830593, 0.02177356, 0.02779421, 0.03219688, 0.03118477,
       0.03120497, 0.0268037 , 0.04027569, 0.03450326, 0.03815299,
       0.00372901, 0.02625643, 0.02677464, 0.03747022, 0.03380574]), 'param_eval_metric': masked_array(data=['logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss',
                   'logloss', 'logloss', 'logloss', 'logloss', 'logloss'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25,
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5,
                   0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.3,
                   0.3, 0.3, 0.3, 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2,
                   0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.1, 0.1, 0.1,
                   0.1, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3,
                   0.3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 4, 5, 6,
                   7, 8, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 4,
                   5, 6, 7, 8, 4, 5, 6, 7, 8],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
                   250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
                   250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
                   250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
                   250],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_use_label_encoder': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.1, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.1, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.2, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.2, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.2, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.2, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.2, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.3, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.3, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.3, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0, 'learning_rate': 0.3, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.2, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.2, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.2, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.2, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.2, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.3, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.3, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.3, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.3, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.1, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.1, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.2, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.2, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.2, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.2, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.2, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.3, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.3, 'max_depth': 5, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.3, 'max_depth': 7, 'n_estimators': 250, 'use_label_encoder': False}, {'eval_metric': 'logloss', 'gamma': 0.5, 'learning_rate': 0.3, 'max_depth': 8, 'n_estimators': 250, 'use_label_encoder': False}], 'split0_test_score': array([-0.43479449, -0.44135412, -0.47960056, -0.50521343, -0.52535182,
       -0.4616479 , -0.48356364, -0.55620104, -0.59251411, -0.5838349 ,
       -0.49366043, -0.57095803, -0.59281864, -0.64376583, -0.65507505,
       -0.43483487, -0.45267099, -0.47601256, -0.49925684, -0.53586077,
       -0.46040068, -0.49252437, -0.52652443, -0.56661029, -0.60356838,
       -0.48731365, -0.53153466, -0.58476685, -0.62090909, -0.59761908,
       -0.42482975, -0.44375685, -0.479688  , -0.51750519, -0.52668208,
       -0.46619506, -0.49479706, -0.54466   , -0.54949113, -0.56124824,
       -0.49024085, -0.54351674, -0.59305764, -0.55156706, -0.56478377]), 'split1_test_score': array([-0.4608854 , -0.49100321, -0.48364099, -0.53445526, -0.52936884,
       -0.50215057, -0.54622138, -0.56480579, -0.57005072, -0.63013624,
       -0.52449639, -0.58282215, -0.61303658, -0.68276366, -0.75000219,
       -0.46478531, -0.4653171 , -0.48121686, -0.50240182, -0.53715843,
       -0.49751144, -0.54127227, -0.5594158 , -0.6011437 , -0.60634441,
       -0.5256817 , -0.58665417, -0.62625147, -0.62540224, -0.71074193,
       -0.46566832, -0.46237844, -0.48440789, -0.51838028, -0.54503727,
       -0.500233  , -0.51805325, -0.56340159, -0.58781094, -0.57839132,
       -0.47799245, -0.53430509, -0.59282899, -0.59220274, -0.63901161]), 'split2_test_score': array([-0.56336299, -0.57592689, -0.61156692, -0.62410721, -0.64113136,
       -0.60262201, -0.67115481, -0.69206988, -0.72780901, -0.78650545,
       -0.66367525, -0.72316617, -0.80187284, -0.82227623, -0.92254379,
       -0.55488822, -0.58613228, -0.60304712, -0.63185698, -0.63020407,
       -0.61326479, -0.6553715 , -0.6874306 , -0.71677493, -0.7840205 ,
       -0.66859779, -0.76353598, -0.7541521 , -0.8362107 , -0.72285678,
       -0.56426446, -0.58277145, -0.6033387 , -0.62253543, -0.65565762,
       -0.62018421, -0.58567233, -0.68257411, -0.70940365, -0.63459147,
       -0.59553006, -0.69778635, -0.70386226, -0.70540758, -0.69999377]), 'split3_test_score': array([-0.50085224, -0.50475437, -0.52428755, -0.53606641, -0.55360565,
       -0.51851679, -0.52888317, -0.57015663, -0.61389468, -0.63477618,
       -0.53686428, -0.59534276, -0.64053775, -0.66263232, -0.70371899,
       -0.49416556, -0.50775698, -0.51648556, -0.53595659, -0.55580357,
       -0.51426939, -0.54059657, -0.55870699, -0.58773015, -0.62339692,
       -0.5498657 , -0.595963  , -0.60682911, -0.64816283, -0.62134142,
       -0.50093574, -0.50304665, -0.52158171, -0.53863034, -0.53533958,
       -0.51078696, -0.53317729, -0.55982807, -0.54721663, -0.56821622,
       -0.54724305, -0.57336207, -0.58464315, -0.59320839, -0.58908883]), 'split4_test_score': array([-0.42729407, -0.43047435, -0.43919869, -0.45588068, -0.45824428,
       -0.44917419, -0.46291599, -0.47966589, -0.51412484, -0.49367628,
       -0.47060491, -0.52493788, -0.53305789, -0.54049925, -0.56652944,
       -0.43778241, -0.42637123, -0.43020535, -0.45553468, -0.4545141 ,
       -0.46436592, -0.47659981, -0.48439671, -0.50232034, -0.50596098,
       -0.5143553 , -0.51251099, -0.50172558, -0.48783942, -0.52077565,
       -0.43093766, -0.41920716, -0.43216373, -0.43840827, -0.44773501,
       -0.46105211, -0.44687535, -0.47289136, -0.47578437, -0.47661129,
       -0.49708168, -0.50403224, -0.52553028, -0.49860522, -0.48423511]), 'mean_test_score': array([-0.47743784, -0.48870259, -0.50765894, -0.5311446 , -0.54154039,
       -0.50682229, -0.5385478 , -0.57257985, -0.60367867, -0.62578581,
       -0.53786025, -0.5994454 , -0.63626474, -0.67038746, -0.71957389,
       -0.47729127, -0.48764972, -0.50139349, -0.52500138, -0.54270819,
       -0.50996244, -0.5412729 , -0.5632949 , -0.59491588, -0.62465824,
       -0.54916283, -0.59803976, -0.61474502, -0.64370486, -0.63466697,
       -0.47732718, -0.48223211, -0.50423601, -0.5270919 , -0.54209031,
       -0.51169027, -0.51571506, -0.56467103, -0.57394134, -0.56381171,
       -0.52161762, -0.5706005 , -0.59998447, -0.5881982 , -0.59542262]), 'std_test_score': array([0.05007634, 0.05196814, 0.05852233, 0.05479838, 0.05901253,
       0.05422214, 0.07277408, 0.06818423, 0.07041034, 0.09501933,
       0.06706102, 0.06627653, 0.09002562, 0.09040262, 0.11828503,
       0.0443304 , 0.05582191, 0.05775858, 0.05922378, 0.05600518,
       0.05546235, 0.06257472, 0.06785685, 0.06973548, 0.08974089,
       0.06301342, 0.08861269, 0.08161063, 0.11155899, 0.07494824,
       0.05130176, 0.05725044, 0.05711811, 0.05877956, 0.06647124,
       0.0575101 , 0.04556508, 0.06745391, 0.07679742, 0.05069955,
       0.04383921, 0.06732917, 0.05773831, 0.06804105, 0.07235557]), 'rank_test_score': array([ 3,  6, 10, 17, 21,  9, 19, 29, 37, 40, 18, 35, 42, 44, 45,  1,  5,
        7, 15, 23, 11, 20, 25, 32, 39, 24, 34, 38, 43, 41,  2,  4,  8, 16,
       22, 12, 13, 27, 30, 26, 14, 28, 36, 31, 33], dtype=int32)}
Best Params:
{'eval_metric': 'logloss', 'gamma': 0.25, 'learning_rate': 0.1, 'max_depth': 4, 'n_estimators': 250, 'use_label_encoder': False}
Best Score:
-0.47729127315947667
TODO OK
